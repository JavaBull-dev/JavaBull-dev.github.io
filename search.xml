<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>Centos7上的Apache服务器部署Let&#39;t Encrypt免费的SSL证书</title>
      <link href="2021/04/08/Centos7%E4%B8%8A%E7%9A%84Apache%E6%9C%8D%E5%8A%A1%E5%99%A8%E9%83%A8%E7%BD%B2Let-t-Encrypt%E5%85%8D%E8%B4%B9%E7%9A%84SSL%E8%AF%81%E4%B9%A6/"/>
      <url>2021/04/08/Centos7%E4%B8%8A%E7%9A%84Apache%E6%9C%8D%E5%8A%A1%E5%99%A8%E9%83%A8%E7%BD%B2Let-t-Encrypt%E5%85%8D%E8%B4%B9%E7%9A%84SSL%E8%AF%81%E4%B9%A6/</url>
      
        <content type="html"><![CDATA[<h2 id="写在前面"><a href="#写在前面" class="headerlink" title="写在前面"></a>写在前面</h2><p>“<strong>传输层安全性协议</strong>（英语：<strong>T</strong>ransport <strong>L</strong>ayer <strong>S</strong>ecurity，缩写：<strong>TLS</strong>）及其前身<strong>安全套接层</strong>（英语：<strong>S</strong>ecure <strong>S</strong>ockets <strong>L</strong>ayer，缩写：<strong>SSL</strong>）是一种<a href="https://zh.wikipedia.org/wiki/%E5%AE%89%E5%85%A8%E5%8D%8F%E8%AE%AE">安全协议</a>，目的是为<a href="https://zh.wikipedia.org/wiki/%E7%B6%B2%E9%9A%9B%E7%B6%B2%E8%B7%AF">互联网</a>通信提供安全及数据<a href="https://zh.wikipedia.org/wiki/%E5%AE%8C%E6%95%B4%E6%80%A7">完整性</a>保障。<a href="https://zh.wikipedia.org/wiki/%E7%B6%B2%E6%99%AF">网景</a>公司（Netscape）在1994年推出首版<a href="https://zh.wikipedia.org/wiki/%E7%B6%B2%E9%A0%81%E7%80%8F%E8%A6%BD%E5%99%A8">网页浏览器</a>－<a href="https://zh.wikipedia.org/wiki/%E7%B6%B2%E6%99%AF%E9%A0%98%E8%88%AA%E5%93%A1">网景导航者</a>时，推出<a href="https://zh.wikipedia.org/wiki/HTTPS">HTTPS</a>协议，以SSL进行加密，这是SSL的起源。<a href="https://zh.wikipedia.org/wiki/IETF">IETF</a>将SSL进行标准化，1999年公布TLS 1.0标准文件（<a href="https://tools.ietf.org/html/rfc2246">RFC 2246</a>）。随后又公布TLS 1.1（<a href="https://tools.ietf.org/html/rfc4346">RFC 4346</a>，2006年）、TLS 1.2（<a href="https://tools.ietf.org/html/rfc5246">RFC 5246</a>，2008年）和TLS 1.3（<a href="https://tools.ietf.org/html/rfc8446">RFC 8446</a>，2018年）。在<a href="https://zh.wikipedia.org/wiki/%E7%80%8F%E8%A6%BD%E5%99%A8">浏览器</a>、<a href="https://zh.wikipedia.org/wiki/%E9%9B%BB%E5%AD%90%E9%83%B5%E4%BB%B6">电子邮件</a>、<a href="https://zh.wikipedia.org/wiki/%E5%8D%B3%E6%99%82%E9%80%9A%E8%A8%8A">即时通信</a>、<a href="https://zh.wikipedia.org/wiki/VoIP">VoIP</a>、<a href="https://zh.wikipedia.org/wiki/%E7%B6%B2%E7%B5%A1%E5%82%B3%E7%9C%9F">网络传真</a>等应用程序中，广泛使用这个协议。许多网站，如<a href="https://zh.wikipedia.org/wiki/Google">Google</a>、<a href="https://zh.wikipedia.org/wiki/Facebook">Facebook</a>、<a href="https://zh.wikipedia.org/wiki/Wikipedia">Wikipedia</a>等也以这个协议来创建安全连线，发送资料。目前已成为<a href="https://zh.wikipedia.org/wiki/%E4%BA%92%E8%81%94%E7%BD%91">互联网</a>上保密通信的工业标准。</p><p>SSL包含记录层（Record Layer）和<a href="https://zh.wikipedia.org/wiki/%E4%BC%A0%E8%BE%93%E5%B1%82">传输层</a>，记录层协议确定传输层数据的封装格式。传输层安全协议使用<a href="https://zh.wikipedia.org/wiki/X.509">X.509</a>认证，之后利用非对称加密演算来对通信方做身份认证，之后交换对称密钥作为会谈密钥（<a href="https://zh.wikipedia.org/wiki/Session_key">Session key</a>）。这个会谈密钥是用来将通信两方交换的资料做加密，保证两个应用间通信的保密性和可靠性，使客户与服务器应用之间的通信不被攻击者窃听。” –摘至 维基<a href="https://zh.wikipedia.org/wiki/%E5%82%B3%E8%BC%B8%E5%B1%A4%E5%AE%89%E5%85%A8%E6%80%A7%E5%8D%94%E5%AE%9A">传输层安全性协议</a></p><h2 id="安装certbot与配置防火墙"><a href="#安装certbot与配置防火墙" class="headerlink" title="安装certbot与配置防火墙"></a>安装certbot与配置防火墙</h2><pre class=" language-shell"><code class="language-shell">#安装软件和配置防火墙时，都需要root权限#开启epel源yum install epel-release#安装必要的软件yum install mod_ssl certbot-apache#防火墙设置规则,给80(http)和443(https)端口放行firewall-cmd --add-service=httpfirewall-cmd --add-service=https#查看apache服务器的状态systemctl status httpd#如果apache没有启动，通过下面的指令启动systemctl start httpd</code></pre><p><strong>Certbot</strong>是一个部署Let’s Encrypt证书的客户端, 而Let’s Encrypt可为安全网站提供免费的传输层安全性协议证书。Certbot能够自动的在Web服务器上部署从Let’s Encrypt获取的证书，非常简单易用。</p><h2 id="安装SSL证书"><a href="#安装SSL证书" class="headerlink" title="安装SSL证书"></a>安装SSL证书</h2><p>生成ssl证书指令</p><pre class=" language-shell"><code class="language-shell">#www.example.com你自己的三级域名#example@gmail.com 你的邮箱地址certbot certonly --webroot -w /var/www/html -d www.example.com --agree-tos --email example@gmail.com</code></pre><p>email地址是用来接收密钥的恢复和通知</p><p>安装成功后会提示</p><pre class=" language-shell"><code class="language-shell">IMPORTANT NOTES: - Congratulations! Your certificate and chain have been saved at   /etc/letsencrypt/live/example.com/fullchain.pem. Your cert   will expire on 2016-04-21. To obtain a new version of the   certificate in the future, simply run Let's Encrypt again. - If you lose your account credentials, you can recover through   e-mails sent to user@example.com. - Your account credentials have been saved in your Let's Encrypt   configuration directory at /etc/letsencrypt. You should make a   secure backup of this folder now. This configuration directory will   also contain certificates and private keys obtained by Let's   Encrypt so making regular backups of this folder is ideal. - If you like Let's Encrypt, please consider supporting our work by:   Donating to ISRG / Let's Encrypt:   https://letsencrypt.org/donate   Donating to EFF:                    https://eff.org/donate-le</code></pre><p>生成出来的证书文件存放于 <code>/etc/letsencrypt/live</code> 目录.</p><h2 id="配置Apache-SSL"><a href="#配置Apache-SSL" class="headerlink" title="配置Apache SSL"></a>配置Apache SSL</h2><p>修改ssl.conf文件</p><pre class=" language-shell"><code class="language-shell">vi /etc/httpd/conf.d/ssl.conf</code></pre><p>找到<code>SSLProtocol</code>和<code>SSLCipherSuite</code>这两个参数将它们删除或者注释掉</p><pre class=" language-shell"><code class="language-shell">. . .# SSLProtocol all -SSLv2. . .# SSLCipherSuite HIGH:MEDIUM:!aNULL:!MD5:!SEED:!IDEA</code></pre><p>接下来把下面的代码加在<code>VirtualHost</code>区域外面,需要注意的是注释掉 <code>SSLSessionTickets</code></p><pre class=" language-shell"><code class="language-shell">    . . .</VirtualHost>. . .# Begin copied text# from https://cipherli.st/# and https://raymii.org/s/tutorials/Strong_SSL_Security_On_Apache2.htmlSSLCipherSuite EECDH+AESGCM:EDH+AESGCM:AES256+EECDH:AES256+EDHSSLProtocol All -SSLv2 -SSLv3SSLHonorCipherOrder On# Disable preloading HSTS for now.  You can use the commented out header line that includes# the "preload" directive if you understand the implications.#Header always set Strict-Transport-Security "max-age=63072000; includeSubdomains; preload"Header always set Strict-Transport-Security "max-age=63072000; includeSubdomains"Header always set X-Frame-Options DENYHeader always set X-Content-Type-Options nosniff# Requires Apache >= 2.4SSLCompression offSSLUseStapling onSSLStaplingCache "shmcb:logs/stapling-cache(150000)"# Requires Apache >= 2.4.11# SSLSessionTickets Off</code></pre><p>保存退出后检查一下语法是否正确</p><pre class=" language-shell"><code class="language-shell">apachectl configtest</code></pre><p>如果得到<code>Syntax OK</code>的提示说说明配置正确,这时候需要重启一下apache</p><pre class=" language-shell"><code class="language-shell">systemctl restart httpd</code></pre><h2 id="检查证书状态"><a href="#检查证书状态" class="headerlink" title="检查证书状态"></a>检查证书状态</h2><p>在<strong>浏览器</strong>中打开链接</p><pre class=" language-shell"><code class="language-shell"># www.example.com你的三级域名https://www.ssllabs.com/ssltest/analyze.html?d=www.example.com&latest</code></pre><p><img src="/image/2021-04-08_210535.png"></p>]]></content>
      
      
      <categories>
          
          <category> linux </category>
          
      </categories>
      
      
        <tags>
            
            <tag> ssl </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>免费域名+免费CDN</title>
      <link href="2021/04/08/%E5%85%8D%E8%B4%B9%E5%9F%9F%E5%90%8D-%E5%85%8D%E8%B4%B9CDN/"/>
      <url>2021/04/08/%E5%85%8D%E8%B4%B9%E5%9F%9F%E5%90%8D-%E5%85%8D%E8%B4%B9CDN/</url>
      
        <content type="html"><![CDATA[<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>cdn是啥？</p><p>“内容分发网络（英语：Content Delivery Network或Content Distribution Network，缩写：CDN）是指一种透过互联网互相连接的电脑网络系统，利用最靠近每位用户的服务器，更快、更可靠地将音乐、图片、视频、应用程序及其他文件发送给用户，来提供高性能、可扩展性及低成本的网络内容传递给用户。” – 摘至维基 <a href="https://zh.wikipedia.org/wiki/%E5%85%A7%E5%AE%B9%E5%82%B3%E9%81%9E%E7%B6%B2%E8%B7%AF">内容分发网络</a></p><p>可以简单的理解为我们访问的是距离我们最近的源服务器的镜像，所以可以加速访问，达到一个良好的访问效果 ，另一个好处就是，可以隐藏我们源服务器真实的ip地址，因为所有的请求都是通过cdn的，不会直接访问到源服务器。</p><p>免费的域名和cdn真香，不过，免费的域名不是一直免费，一般来说它都会给你使用一段时间，超过这段时间，就需要花钱买了；免费cdn在大陆访问速度并不是很好；但是如果我们只是想玩玩，其实也无所谓，域名需要付费的时候，我们再换过一个接着玩就够了。</p><h2 id="免费CDN"><a href="#免费CDN" class="headerlink" title="免费CDN"></a>免费CDN</h2><p>打开<a href="https://www.freenom.com/">Freenom</a>，国内访问速度缓慢，如果用代理的话，建议使用代理</p><p><img src="/image/2021-04-08_173102.png"></p><p>输入你想要的名字</p><p><img src="/image/2021-04-08_173238.png"></p><p>接下来花0$购买这个域名，使用期限调节为最久（one year）</p><p><img src="/image/2021-04-08_190205.png"></p><p>将刚获取的域名与IP进行绑定</p><p><img src="/image/2021-04-08_190424.png"></p><p>Manage Domain</p><p><img src="/image/2021-04-08_190539.png"></p><p>添加A记录</p><p><img src="/image/2021-04-08_190717.png"></p><p>添加A记录后，需要等待一些时间才能通过域名解析到ip地址，通常是几分钟或者更长。</p><h4 id="拓展"><a href="#拓展" class="headerlink" title="拓展"></a>拓展</h4><p><strong>A</strong>： 将域名指向一个IPv4地址</p><p><strong>CNAME</strong>： 如果将域名指向一个域名，实现与被指向域名相同的访问效果，需要增加CNAME记录。</p><p><strong>MX</strong>： 建立电子邮箱服务，将指向邮件服务器地址，需要设置MX记录。</p><p><strong>NS</strong>： 域名解析服务器记录，如果要将子域名指定某个域名服务器来解析，需要设置NS记录</p><h2 id="免费域名"><a href="#免费域名" class="headerlink" title="免费域名"></a>免费域名</h2><p>先打开<a href="https://www.cloudflare.com/">Cloudflare</a>注册一个账号并登陆。</p><p>添加需要cdn加速的站点</p><p><img src="/image/2021-04-08_192029.png"></p><p>选择免费的套餐</p><p><img src="/image/2021-04-08_192126.png"></p><p>然后从freenom中设置dns指向cloudflare的dns，之后按照cloudflare的提示完成操作即可。更多cloudflare高级的设置参见cloudflare document。</p>]]></content>
      
      
      <categories>
          
          <category> cdn </category>
          
      </categories>
      
      
        <tags>
            
            <tag> cloudflare </tag>
            
            <tag> freenom </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Centos7下搭建影视网站</title>
      <link href="2021/04/08/Centos7%E4%B8%8B%E6%90%AD%E5%BB%BA%E5%BD%B1%E8%A7%86%E7%BD%91%E7%AB%99/"/>
      <url>2021/04/08/Centos7%E4%B8%8B%E6%90%AD%E5%BB%BA%E5%BD%B1%E8%A7%86%E7%BD%91%E7%AB%99/</url>
      
        <content type="html"><![CDATA[<h3 id="写在前面"><a href="#写在前面" class="headerlink" title="写在前面"></a>写在前面</h3><p>有没有小伙伴为想看一些电影、动漫等一些视频但是没有找到而挠头烦恼呢？虽然找到了，但是需要充值VIP会员呢？俺就是想看部电影，打发打发时间而已，花几十块钱充值一个会员着实划不来….  </p><p>不让看，就自己搭建一个影视网站，想看什么看什么，同时可以分享给有同样烦恼的人，再者也可以锻炼一下自己的技术，开拓自己的视野，一举多得。  </p><h3 id="购买云服务器"><a href="#购买云服务器" class="headerlink" title="购买云服务器"></a>购买云服务器</h3><p>首先，我们需要购买一台虚拟云服务器，作为影视网站的容器 ；我们可以把云主机大致分为两类：1.国内  2.国外；</p><h4 id="国内的云主机"><a href="#国内的云主机" class="headerlink" title="国内的云主机"></a>国内的云主机</h4><p>优点：</p><ul><li>国内用户访问的速度更快一些，ping值一般来说会比较小</li><li>服务本地化</li></ul><p>缺点</p><ul><li>必须备案：通常来说，备案过程是比较繁琐的且漫长的，一般要几周到几个月时间才能备案成功，而且某些类型的网站需要提供的资料很难获取，导致备案成功率不高</li><li>价钱上：可能更高一些。</li><li>服务参差不齐：因为虚拟主机门槛低，所以服务商鱼龙混杂，如果要选则国内的云主机的话，建议选择大公司的。</li></ul><h4 id="国外的云主机"><a href="#国外的云主机" class="headerlink" title="国外的云主机"></a>国外的云主机</h4><p>优点：</p><ul><li>价格便宜，服务稳定（对学生党来说很好）</li><li>不需要备案（选择国外云主机主要的原因）</li></ul><p>缺点：</p><ul><li>容易被封</li><li>地域性访问速度较慢，延迟有时候会很大</li></ul><h4 id="云服务器商的选择"><a href="#云服务器商的选择" class="headerlink" title="云服务器商的选择"></a>云服务器商的选择</h4><p>介绍一下我曾经使用过且认为比较好的云主机</p><p><strong>virmach</strong> ：稳定且便宜，2014年成立的VPS服务商，自从成立以来一直走低价路线，提供基于KVM及OpenVZ架构的VPS，数据中心位于洛杉矶、圣何塞等地区，除了VPS以外，也提供独立服务器、游戏服务器及虚拟主机业务，其中最让广大网友乐道的是他家提供的各种便宜且稳定的VPS，尤其在黑色星期五及网络星期一等促销活动时，推出了一系列非常便宜的VPS更是让大家疯狂抢购，比如4核CPU 8G内存40G SSD 1T流量的KVM架构VPS年付只要24美元。不过，在购买的时候，需要选择延迟小的机房的云主机；我曾经就是因为随便选择，后来相当后悔，卡的一匹。</p><p><img src="/image/2021-04-08_151730.png"></p><p><strong>pacificrack</strong>：2007 年成立的美国 VPS 主机商，2009 年被 quadranet 收购，在 2019 年 11 月又重新开始独自运作。主要销售  VPS，包括便宜 vps、KVM SSD vps、站群 vps、云主机。一般来说，过节的时候都会推出一些优惠的套餐，个人觉得用起来比较好。</p><p><img src="/image/2021-04-08_152542.png"></p><p><strong>vultr</strong>：成立于2014年，美国商家，实力很强大，拥有众多机房，有美国洛杉矶、西雅图、硅谷、日本东京，英国伦敦，德国法兰克福、新加坡等全球17个数据中心/机房。特点就是按小时计费，没有付款周期的限制，用多少就付多少，不想继续使用了，直接删除VPS  就可以了，使用起来比较方便，价钱稍高。</p><p><img src="/image/2021-04-08_153557.png"></p><p>购买教程：<a href="https://zhuanlan.zhihu.com/p/108960575">以pacificrack为例，购买成功后，通过ssh工具登入云主机</a>，但是注意，这次我们选择的是Centos7</p><h3 id="LAMP环境的搭建"><a href="#LAMP环境的搭建" class="headerlink" title="LAMP环境的搭建"></a>LAMP环境的搭建</h3><p>可以参看教程 <a href="https://www.ljpc.ga/2021/04/08/Centos7%E4%B8%8B%E6%9E%84%E5%BB%BAlamp%E7%8E%AF%E5%A2%83/">Centos7下构建lamp环境</a></p><h3 id="安装cms系统"><a href="#安装cms系统" class="headerlink" title="安装cms系统"></a>安装cms系统</h3><p>cms产品众多，俺选择苹果cms来搭建影视网站，功能强大，且适合用来做视频网站；苹果cmsv10下载地址 <a href="https://cdn.jsdelivr.net/gh/magicblack/maccms_down@master/maccms10.zip%EF%BC%8C%E7%84%B6%E5%90%8E%E5%B0%86%E4%B8%8B%E8%BD%BD%E7%9A%84%E5%8E%8B%E7%BC%A9%E5%8C%85%E6%94%BE%E5%9C%A8centos7">https://cdn.jsdelivr.net/gh/magicblack/maccms_down@master/maccms10.zip，然后将下载的压缩包放在centos7</a> 的/var/www/html 目录下</p><pre class=" language-shell"><code class="language-shell">#切换到/var/www/html目录cd /var/www/html#安装unzip工具yum install unzip#通过unzip解压unzip maccms10.zip#重新启动apache服务器systemctl restart httpd#授予文件读写权限chmod  -R 777 *</code></pre><p>通过浏览器访问 – &gt; 你的ip:80，出现如下内容</p><p><img src="/image/2021-04-08_162457.png"></p><p>一直下一步，来到如下</p><p><img src="/image/2021-04-08_162621.png"></p><pre class=" language-shell"><code class="language-shell">数据名称：maccms10 (自定义)数据库账号：root数据库密码：123456 (之前安装数据库后设置的密码)管理员账号：root (自定义)密码：123456 (自定义)</code></pre><p>测试数据库连接，立即执行安装，根据提示，将admin.php 修改成 hello.php（自定义）</p><pre class=" language-shell"><code class="language-shell">mv admin.php hello.php</code></pre><p>浏览器输入<a href="http://139.180.159.231/hello.php%EF%BC%8C%E7%99%BB%E5%85%A5%E5%90%8E%E5%8F%B0%EF%BC%9B%E4%B9%8B%E5%90%8E%E9%9C%80%E8%A6%81%E9%87%87%E9%9B%86%E8%B5%84%E6%BA%90%EF%BC%8C%E5%8F%AF%E4%BB%A5%E6%9F%A5%E7%9C%8B%E5%AE%98%E6%96%B9%E6%96%87%E6%A1%A3%EF%BC%88https://www.showdoc.com.cn/mytheme?page_id=2779989134071820%EF%BC%89">http://139.180.159.231/hello.php，登入后台；之后需要采集资源，可以查看官方文档（https://www.showdoc.com.cn/mytheme?page_id=2779989134071820）</a></p><p>不同的模板，会有不同的显示效果，比如说我的站点就如下图所示，大功告成！是不是小有成就！</p><p><img src="/image/2021-04-08_163455.png"></p>]]></content>
      
      
      <categories>
          
          <category> linux </category>
          
      </categories>
      
      
        <tags>
            
            <tag> cms </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Centos7下构建lamp环境</title>
      <link href="2021/04/08/Centos7%E4%B8%8B%E6%9E%84%E5%BB%BAlamp%E7%8E%AF%E5%A2%83/"/>
      <url>2021/04/08/Centos7%E4%B8%8B%E6%9E%84%E5%BB%BAlamp%E7%8E%AF%E5%A2%83/</url>
      
        <content type="html"><![CDATA[<h3 id="临时关闭selinux"><a href="#临时关闭selinux" class="headerlink" title="临时关闭selinux"></a>临时关闭selinux</h3><pre class=" language-shell"><code class="language-shell">#查看selinux是否开启getenforce#关闭selinuxsetenforce 0</code></pre><h3 id="安装Apache"><a href="#安装Apache" class="headerlink" title="安装Apache"></a>安装Apache</h3><pre class=" language-sh"><code class="language-sh">#输入y，同意安装yum install httpd #启动 apachesystemctl start httpd.service #设置apache开机启动systemctl enable httpd.service </code></pre><h3 id="修改防火墙规则"><a href="#修改防火墙规则" class="headerlink" title="修改防火墙规则"></a>修改防火墙规则</h3><pre class=" language-shell"><code class="language-shell">#允许外界访问80端口firewall-cmd --add-port=80/tcp</code></pre><h3 id="安装MariaDB"><a href="#安装MariaDB" class="headerlink" title="安装MariaDB"></a>安装MariaDB</h3><pre class=" language-shell"><code class="language-shell">#输入y同意安装yum install mariadb mariadb-server#启动MariaDBsystemctl start mariadb.service #设置开机启动systemctl enable mariadb.service </code></pre><h3 id="修改MySQL密码"><a href="#修改MySQL密码" class="headerlink" title="修改MySQL密码"></a>修改MySQL密码</h3><pre class=" language-shell"><code class="language-shell">#通过mysql，连接数据库mysql#切换数据库use mysql;#修改mysql密码set password for 'root'@'localhost'=password('输入你的密码');#如果需要mysql授权远程连接，请使用如下命令授予权限grant all on *.* to root identified by 'root';#关闭数据库连接exit</code></pre><h3 id="安装PHP以及组件"><a href="#安装PHP以及组件" class="headerlink" title="安装PHP以及组件"></a>安装PHP以及组件</h3><pre class=" language-shell"><code class="language-shell">#默认的yum源无法升级PHP，并且通过默认的yum源安装的是低版本的php；我们需要安装其他高版本的php时，需要添加第三方yum源rpm -Uvh https://mirror.webtatic.com/yum/el7/epel-release.rpmrpm -Uvh https://mirror.webtatic.com/yum/el7/webtatic-release.rpm#安装php7.1，提示输入y确认安装yum install -y php71w-fpm php71w-opcache php71w-cli php71w-gd php71w-imap php71w-mysqlnd php71w-mbstring php71w-mcrypt php71w-pdo php71w-pecl-apcu php71w-pecl-mongodb php71w-pecl-redis php71w-pgsql php71w-xml php71w-xmlrpc php71w-devel mod_php71w#查看当前php版本php -v</code></pre>]]></content>
      
      
      <categories>
          
          <category> linux </category>
          
      </categories>
      
      
        <tags>
            
            <tag> lamp </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
